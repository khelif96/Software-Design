Static Fields and Static Methods

    - Static Methods are methods that belong to the class and not to the object, and can be access by the classname
    - It does not need any object
    - Can call only other other static methods and cannot call any non static methods from it
    - Can only access static data and cannot access non static variables

Static variables are class variables
Non static Variables are instance variables
page 203
For ever class imported
we can call static methods/fields
static classNameMethodName()

Math class
    All Methods are Static
    perform Common mathematical functions
    - Part of the Java.lang package it is implicitly imported by the compiler

  Scope of Variables

  <code>
    import Java.lang.Scanner;
    public class ClassName{
        public static void main(String[] args){
            Scanner input = new Scanner();
            double ![number]! = input.nextdouble();  // ![]! local Variable scope: From the point of the declaration to the end of the block
        }
    }
  </code>



Shadowing
    <code>
        public class Scope{
            public static int x = 1;
            public static void main(String[] args){
                int x = 5; // local variable x shadows the public variable within its scope
                System.out.println(x);
                useLocalVariable();
                useField();
                useLocalVariable();
                useField();
                System.out.println(x);
            }
            public static void useLocalVariable(){
                int x = 25;
                System.out.println(x);
                ++x;
            }
            public static void useField(){
                System.out.println(x);
                x*=10;
                System.out.println(x);
            }
        }
    </code>


 Static Import
    - import static packageName.ClassName.*;
        - Only all static methods are accessible
        - No longer need className.methodName(); can just call methodName();